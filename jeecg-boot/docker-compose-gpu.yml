services:
  kykms-mysql:
    build:
      context: ./DB
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
      TZ: Asia/Shanghai
    restart: always
    container_name: kykms-mysql
    #image: mysql:5.7
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=128M
#      --default-authentication-plugin=caching_sha2_password
    ports:
      - 3306:3306
    networks:
      - opensearch-net

  kykms-redis:
    image: docker.1ms.run/redis/redis-stack:latest
    ports:
      - 6379:6379
    restart: always
    hostname: kykms-redis
    container_name: kykms-redis
    networks:
      - opensearch-net

  kykms-ui:
    build:
      context: ../
      dockerfile: Dockerfile.vue.build
    restart: on-failure
    privileged: true
    container_name: kykms-ui
    image: kykms-ui
    hostname: kykms-ui
    ports:
      - 30016:80
    networks:
      - opensearch-net

  kykms-es: # This is also the hostname of the container within the Docker network (i.e. https://kykms-es/)
    build:
      context: ./ES
    #image: docker.1ms.run/opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: kykms-es
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=kykms-es # Name the node that will run in this container
      - discovery.seed_hosts=kykms-es,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=kykms-es,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - plugins.security.ssl.http.enabled=false
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    build:
      context: ./ES
    #image: docker.1ms.run/opensearchproject/opensearch:latest # This should be the same image used for kykms-es to avoid issues
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - plugins.security.ssl.http.enabled=false
      - node.name=opensearch-node2
      - discovery.seed_hosts=kykms-es,opensearch-node2
      - cluster.initial_cluster_manager_nodes=kykms-es,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: docker.1ms.run/opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 30019:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["http://kykms-es:9200","http://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - opensearch-net

  kykms:
    build:
      context: ./jeecg-boot-module-system
    restart: on-failure
    privileged: true
    depends_on:
      - kykms-mysql
      - kykms-redis
      - kykms-es
    container_name: kykms
    image: kykms
    hostname: kykms
    environment:
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ports:
      - 30018:8080

    volumes:
      - kykms_data:/kykms/kmdocs/

    networks:
      - opensearch-net

  ollama:
    image: docker.1ms.run/ollama/ollama:latest
    ports:
      - 11434:11434 
    volumes:
      - ./ollama:/root/.ollama
    networks:
      - opensearch-net
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu] 
  setup:
    image: docker.1ms.run/curlimages/curl:latest
    networks:
      - opensearch-net
    volumes:
      - ./scripts:/ragapp
    environment:
      - MODEL=${MODEL:-qwen2:latest}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://ollama:11434}
    command: >
      /bin/sh -c 
      "/ragapp/setup_ollama.sh"
    depends_on:
      - ollama

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - 30020:8080
    environment:
      - TZ=Asia/Shanghai
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://ollama:11434}
      - 'HF_ENDPOINT=https://hf-mirror.com'
      - ENABLE_OPENAI=false
      - USE_OLLAMA_DOCKER=true
      - ENABLE_OPENAI_API=false
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - opensearch-net

volumes:
  opensearch-data1:
  opensearch-data2:
  kykms_data:
  open-webui:

networks:
  opensearch-net:
